generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  MANAGER
  USER
}

model User {
  id                     Int                      @id @default(autoincrement())
  email                  String                   @unique
  hash                   String
  role                   Role                     @default(USER)
  isActive               Boolean                  @default(false)
  createdAt              DateTime                 @default(now())
  updatedAt              DateTime                 @updatedAt
  RefreshToken           RefreshToken[]
  EmailVerificationToken EmailVerificationToken[]
  PasswordResetToken     PasswordResetToken[]
}

model RefreshToken {
  id          Int      @id @default(autoincrement())
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      Int
  token       String   @unique // хэш токена, НЕ сырой токен
  createdAt   DateTime @default(now())
  expiresAt   DateTime
  revoked     Boolean  @default(false)
  createdByIp String?
  deviceInfo  String?

  @@index([userId])
  @@map("refresh_tokens")
}

model EmailVerificationToken {
  id          Int      @id @default(autoincrement())
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      Int
  token       String   @unique // хранится ХЭШ токена
  createdAt   DateTime @default(now())
  expiresAt   DateTime
  used        Boolean  @default(false)
  createdByIp String?
  deviceInfo  String?

  @@index([userId])
  @@map("email_verification_tokens")
}

model PasswordResetToken {
  id          Int       @id @default(autoincrement())
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      Int
  token       String    @unique // хранится ХЭШ токена
  createdAt   DateTime  @default(now())
  expiresAt   DateTime
  used        Boolean   @default(false)
  usedAt      DateTime?
  createdByIp String?
  deviceInfo  String?

  @@index([userId])
  @@map("password_reset_tokens")
}
